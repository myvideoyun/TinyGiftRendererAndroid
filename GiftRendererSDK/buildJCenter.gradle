apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

// 配置 jCenter 路径
group = "com.myvideoyun.video"
def libraryName = project.name
version = android.defaultConfig.versionName

// 定义相关网站
def siteUrl = 'https://github.com/myvideoyun/TinyGiftRendererAndroid'  // 项目的主页
def gitUrl = 'https://github.com/myvideoyun/TinyGiftRendererAndroid.git'

install {
  repositories.mavenInstaller {
    // This generates POM.xml with proper parameters
    pom {
      project {
        packaging 'aar'
        // Add your description here
        name libraryName
        url siteUrl
        // Set your license
        licenses {
          license {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }
        developers {
          developer {
            id 'myvideoyun'        //填写的一些基本信息
            name 'myvideoyun'
            email 'marketing@myvideoyun.com' // 填写邮箱
          }
        }
        scm {
          connection gitUrl
          developerConnection gitUrl
          url siteUrl
        }
      }
    }
  }
}

publishing {
    publications {
        MyPublication(MavenPublication) {
          // Define this explicitly if using implementation or api configurations
          pom.withXml {
            def dependenciesNode = asNode().getAt('dependencies')[0] ?: asNode().appendNode('dependencies')
          
            // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
            configurations.implementation.allDependencies.each {
               // Ensure dependencies such as fileTree are not included.
               if (it.name != 'unspecified') {
                  def dependencyNode = dependenciesNode.appendNode('dependency')
                  dependencyNode.appendNode('groupId', it.group)
                  dependencyNode.appendNode('artifactId', it.name)
                  dependencyNode.appendNode('version', it.version)
               }
            }
          }
        }
    }
}   

// 打包 javadocjar 和 sourcejar
task sourcesJar(type: Jar) {
  from android.sourceSets.main.java.srcDirs
  classifier = 'sources'
}
task javadoc(type: Javadoc) {
  source = android.sourceSets.main.java.srcDirs
  classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
  options.encoding "UTF-8"
  options.charSet 'UTF-8'
  options.author true
  options.version true
  failOnError false
}
task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}
artifacts {
  archives javadocJar
  archives sourcesJar
}
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
  user = properties.getProperty("bintray.user")
  key = properties.getProperty("bintray.apikey")
  configurations = ['archives']
  publications = ['MyPublication']
  pkg {
    repo = "sdk"
    name = libraryName    //发布到JCenter上的项目名字
    websiteUrl = siteUrl
    vcsUrl = gitUrl
    licenses = ["Apache-2.0"]
    userOrg = properties.getProperty("bintray.userOrg")
    publish = true
  }
}
